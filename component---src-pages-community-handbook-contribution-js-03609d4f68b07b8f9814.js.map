{"version":3,"file":"component---src-pages-community-handbook-contribution-js-03609d4f68b07b8f9814.js","mappings":"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","sources":["webpack://Layer5/./src/components/handbook-navigation/intra-page.js","webpack://Layer5/./src/sections/Community/Handbook/contributing.js","webpack://Layer5/./src/pages/community/handbook/contribution.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage({ contents }) {\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport { HandbookWrapper } from \"./Handbook.style\";\nimport TOC from \"../../../components/handbook-navigation/index\";\nimport Code from \"../../../components/CodeBlock\";\nimport TocPagination from \"../../../components/handbook-navigation/TocPagination\";\nimport IntraPage from \"../../../components/handbook-navigation/intra-page\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst contents = [\n  { id: 0, link: \"#Clone your fork\", text: \"Clone your fork\" },\n  { id: 1, link: \"#Checkout a new branch\", text: \"Checkout a new branch\" },\n  { id: 2, link: \"#Commit your changes\", text: \"Commit your changes\" },\n  { id: 3, link: \"#Sign-off commits\", text: \"Sign-off commits\" },\n  { id: 4, link: \"#Push changes to Github\", text: \"Push changes to Github\" },\n  { id: 5, link: \"#Create a pull request\", text: \"Create a pull request\" },\n];\n\nconst contributingGuide = () => {\n  const Signoff = \"../../../../.github/assets/images/git-signoff-vscode.png\";\n  const compareAndPR = \"../../../../.github/assets/images/compare-and-pr.png\";\n  const createPR = \"../../../../.github/assets/images/create-pr.png\";\n\n  return (\n    <HandbookWrapper>\n      <div className=\"page-header-section\">\n        <h1>Contribution</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          <h2>General contribution flow</h2>\n          <p>\n            Pull requests (PRs) are the best ways to propose changes to a\n            project repository. At Layer5 org, we use the Github Flow:\n          </p>\n          <div className=\"content\">\n            <a id=\"Clone your fork\">  <h3>Clone your fork to your local machine</h3> </a>\n            <ul>\n              <li>Fork the repository you are working on.</li>\n              <li>\n                <span>\n                  Go to your GitHub account, open the forked repository, click\n                  on the code button and then click the “copy to clipboard” icon\n                  if you intend to use a command-line tool.{\" \"}\n                </span>\n              </li>\n              <li>\n                <span>\n                  Open the terminal and run the following git command:\n                  <div className=\"codes\">\n                    <Code codeString=\"git clone “URL you copied from the clipboard.”\" />\n                  </div>\n                </span>\n              </li>\n            </ul>\n\n            <h3>Add 'upstream' repo to list of remotes</h3>\n            <ul>\n              <li>\n                <span>\n                  Keeping your fork up to date while this isn't a necessary\n                  step. If you plan on doing anything more than a tiny quick\n                  fix, you'll want to make sure you keep your fork up to date by\n                  tracking the original \"upstream\" repo that you forked earlier.\n                </span>\n              </li>\n              <li>\n                <span>\n                  To do this, you'll need to add a remote. An example of the\n                  command is given below:\n                  <div className=\"codes\">\n                    <Code codeString=\"git remote add upstream https://github.com/layer5io/meshery.git \" />\n                  </div>\n                  Here “meshery\" is used as the example repo. Be sure to\n                  reference the actual repo you are contributing to.\n                </span>\n              </li>\n            </ul>\n\n            <a id=\"Checkout a new branch\">  <h3>Create and checkout a new branch</h3> </a>\n            <ul>\n              <li>\n                <span>\n                  Whenever you begin to work on a new feature or bugfix, it's\n                  important that you create a new branch. Not only is it a\n                  proper git workflow, but it also keeps your changes organized\n                  and separated from the master branch so that you can easily\n                  submit and manage multiple pull requests for every task\n                  completed.\n                </span>\n              </li>\n              <li>\n                <span>\n                  Perform the flow:\n                  <div className=\"codes\">\n                    <Code codeString=\" git checkout -b your-new-branch-name\" />\n                  </div>\n                  For example,\n                  <div className=\"codes\">\n                    <Code codeString=\"git checkout -b feature\" />\n                  </div>{\" \"}\n                  (feature being a branch name)\n                </span>\n              </li>\n            </ul>\n\n            <h3>Make the necessary changes to your file.</h3>\n            <ul>\n              <li>\n                <span>\n                  To add the changes you have made to your branch, use:\n                  <div className=\"codes\">\n                    <Code codeString=\"git add <file> \" />\n                  </div>\n                </span>\n              </li>\n              <li>\n                <span>\n                  {\" \"}\n                  If you add multiple file changes to the branch, you simply\n                  use:\n                  <div className=\"codes\">\n                    <Code codeString=\" git add .\" />\n                  </div>\n                </span>\n              </li>\n            </ul>\n\n            <a id=\"Commit your changes\">  <h3>Commit the changes made</h3> </a>\n            <ul>\n              <li>\n                <span>\n                  Now commit those changes using the git commit command:\n                  <div className=\"codes\">\n                    <Code codeString=\"git commit -s -m “This is my commit message”\" />\n                  </div>\n                </span>\n              </li>\n            </ul>\n\n            <a id=\"Sign-off commits\"> <h3>\n                Make sure to{\" \"}\n              <a href=\"https://github.com/layer5io/layer5/blob/master/CONTRIBUTING.md#signing-off-on-commits\">\n                  Sign-off\n              </a>{\" \"}\n                on your Commits (Developer Certificate of Origin)\n            </h3>\n            </a>\n            <p>\n              To contribute to this project, you must agree to the Developer\n              Certificate of Origin (DCO) for each commit you make. The DCO is a\n              simple statement that you, as a contributor, have the legal right to\n              contribute.{\" \"}\n            </p>\n            <p>\n              To signify that you agree to the DCO for contributions, you simply\n              add a line to each of your git commit messages:\n            </p>\n            <div className=\"codes\">\n              <Code codeString=\"Signed-off-by: Jane Smith <jane.smith@example.com>\" />\n            </div>\n            <p>\n              In most cases, you can add this signoff to your commit automatically\n              with the -s or --signoff flag to git commit. You must use your real\n              name and a reachable email address (sorry, no pseudonyms or\n              anonymous contributions). An example of signing off on a commit:\n            </p>\n            <div className=\"codes\">\n              <Code codeString=\"$ commit -s -m “my commit message w/signoff”\" />\n            </div>\n            <p>\n              To ensure all your commits are signed, you may choose to add this\n              alias to your global .gitconfig:\n            </p>\n            <div className=\"codes\">\n              <Code\n                codeString=\"[alias]\n  amend = commit -s --amend\n  cm = commit -s -m\n  commit = commit -s\n\"\n              />\n            </div>\n            <p>\n              Or you may configure your IDE, for example, Visual Studio Code to\n              automatically sign-off commits for you:\n            </p>\n            <StaticImage src={Signoff} id=\"sign-off\" alt=\"Signoff\" />\n\n            <a id=\"Push changes to Github\">  <h3>Push changes to Github</h3> </a>\n            <ul>\n              <li>\n                <span>\n                  To push your changes, run the git command:\n                  <div className=\"codes\">\n                    <Code codeString=\"git push origin your_branch_name\" />\n                  </div>\n                </span>\n              </li>\n            </ul>\n            <a id=\"Create a pull request\">  <h3>Create a pull request (PR)</h3> </a>\n            <ul>\n              <li>\n                <span>\n                  Head over to your forked repository on GitHub and you'll see a Compare & pull request button. Click on that button.\n                </span>\n                <br/>\n                <span>\n                  Note: Please ensure that the right branch is selected for the PR.\n                </span>\n                <div>\n                  <br />\n                  <StaticImage src={compareAndPR} alt=\"Compare and pull request\" />\n                </div>\n              </li>\n            </ul>\n            <ul>\n              <li>\n                <span>\n                  Once you click on the button, you'll be taken to the Pull Request page. Here, you can add a title and description to your pull request that explains your contribution. Once you're done, click on the Create pull request button.\n                </span>\n                <div>\n                  <br />\n                  <StaticImage src={createPR} alt=\"create pr\" />\n                  <br />\n                </div>\n              </li>\n            </ul>\n          </div>\n          <TocPagination />\n        </Container>\n\n        <IntraPage contents={contents} />\n      </div>\n    </HandbookWrapper>\n  );\n};\n\nexport default contributingGuide;\n","import React from \"react\";\n\nimport SEO from \"../../../components/seo\";\nimport ContributingPage from \"../../../sections/Community/Handbook/contributing\";\n\nconst Contributing = () => {\n  return (\n    <>\n      <ContributingPage />\n\n    </>\n  );\n};\nexport default Contributing;\nexport const Head = () => {\n  return <SEO title=\"Contribution\" description=\"A detailed contribution guide.\" />;\n};"],"names":["JoinCommunityWrapper","styled","contents","useState","intapath","setIntapath","useEffect","path","window","location","pathname","className","map","x","key","id","Link","to","link","activeClassName","text","codeString","href","S","src","alt","TocPagination","Head","title","description"],"sourceRoot":""}