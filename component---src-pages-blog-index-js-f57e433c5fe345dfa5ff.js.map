{"version":3,"file":"component---src-pages-blog-index-js-f57e433c5fe345dfa5ff.js","mappings":"oPACaA,E,SAAkBC,QAAAA,IAAAA,WAAU,0EAAVA,CAAU,wwB,uDCgGzC,EArFiB,SAAH,GAMP,IALLC,EAAU,EAAVA,WACAC,EAAW,EAAXA,YACAC,EAAW,EAAXA,YACAC,EAAW,EAAXA,YACAC,EAAI,EAAJA,KAEA,GAAsCC,EAAAA,EAAAA,UAAS,GAAxCC,EAAW,KAAEC,EAAc,KAC3BC,GAAgBH,EAAAA,EAAAA,UAAS,IAAb,GACbI,EAAkBH,EAAcE,EAChCE,EAAmBD,EAAkBD,EAC3C,GAAsCH,EAAAA,EAAAA,UAAS,IAAxCM,EAAW,KAAEC,EAAc,KAClC,GAAqCC,EAAAA,EAAAA,GACnCT,EAAKU,OAAOC,MACZH,EACAD,EACA,CAAC,cAAe,SAChB,MALMK,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAOhBC,EAAgBF,EAAaG,MAAMT,EAAkBD,GAErDW,EAAW,SAACC,GAChBd,EAAec,GACfC,OAAOC,SAAS,CACdC,IAAK,IACLC,KAAM,IACNC,SAAU,UAEd,EACA,OACE,gBAAC5B,EAAe,KACd,gBAAC6B,EAAA,EAAU,CACTC,MAAM,OACNC,KAAK,OACLC,IAAKC,EAAAA,EACLC,SAAS,mBAEX,uBAAKC,UAAU,qBACb,gBAAC,KAAS,KACR,gBAAC,KAAG,KACF,gBAAC,KAAG,CAACC,GAAI,GAAIC,GAAI,GACf,uBAAKF,UAAU,kBACb,gBAAC,IAAe,CACdjC,WAAYA,EACZC,YAAaA,EACbC,YAAaA,IAEf,gBAACkC,EAAA,EAAS,CAACzB,YAAaA,EAAaM,WAAYA,EAAYG,SAAUA,EAAUd,YAAaA,KAEhG,uBAAK2B,UAAU,qBACb,gBAAC,KAAG,KACDjB,EAAaqB,OAAS,GACrB,gBAAC,KAAG,CAACH,GAAI,GAAII,GAAI,GAAG,wCACoB3B,EAAY,YAIrDO,EAAcmB,OAAS,GAAKnB,EAAcqB,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAM,OACvE,gBAAC,KAAG,CAACC,IAAKH,EAAIN,GAAI,GAAII,GAAI,GACxB,gBAACM,EAAA,EAAI,CAACH,YAAaA,EAAaC,OAAQA,IACpC,IAER,gBAAC,KAAG,KACDxB,EAAcmB,OAAS,GACtB,gBAAC,IAAU,CACT7B,aAAcA,EACdqC,WAAY7B,EAAaqB,OACzBjB,SAAUA,EACVd,YAAaA,QAOzB,gBAAC,KAAG,CAAC4B,GAAI,GAAIC,GAAI,GACf,gBAAC,IAAO,CAAChC,YAAaA,QAOpC,EC1FM2C,GAAWC,E,SAAAA,KAAS,kBAAM,+BAAwC,IAuExE,EA9Ba,SAACC,GACZ,OAAoC3C,EAAAA,EAAAA,WAAS,GAAtCL,EAAU,KAAEiD,EAAa,KAC1BhD,EAAc,WAClBgD,GAAc,EAChB,GAIAC,EAAAA,EAAAA,YAAU,WACJF,EAAMG,SAASC,OACbJ,EAAMG,SAASC,MAAMpD,YAAYC,GAEzC,GAAG,IACH,IAAIoD,EAAW,SAACL,GACd,OAAIhD,EAAmB,gBAAC8C,EAAaE,GAC9B,gBAAC,EAAaA,EACvB,EACA,OACE,gCACE,gBAACK,EAAQ,CACPrD,WAAYA,EACZC,YAAaA,EACbC,YAjBc,WAClB+C,GAAc,EAChB,EAgBM9C,YAAa6C,EAAM7C,YACnBC,KAAM4C,EAAM5C,OAKpB,EAEakD,EAAO,WAClB,OAAO,gBAAC,IAAG,CAAC1B,MAAM,OAAO2B,YAAY,iIACvC,C","sources":["webpack://Layer5/./src/sections/Blog/Blog-grid/blogGrid.style.js","webpack://Layer5/./src/sections/Blog/Blog-grid/index.js","webpack://Layer5/./src/pages/blog/index.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const BlogPageWrapper = styled.div`\n  .blog-grid-wrapper {\n    margin: 5rem auto;\n  }\n  .tooltip-search {\n    margin-bottom: 0.8rem;\n  }\n\n  @media only screen and (max-width: 575px) {\n    .blog-grid-wrapper {\n      margin: 0 auto 1rem;\n    }\n  }\n\n  @media only screen and (max-width: 992px) {\n    .blog-page-wrapper {\n      margin-bottom: 5rem;\n    }\n\n    .post-meta-block {\n      height: 3.5rem;\n    }\n  }\n\n  @media only screen and (min-width: 575px) {\n    .tooltip-search {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 0;\n    }\n  }\n  /* @media only screen and (min-width: 990px) {\n    .tooltip-search {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  } */\n`;\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport Sidebar from \"../Blog-sidebar\";\nimport RssFeedIcon from \"../../../assets/images/socialIcons/rss-sign.svg\";\nimport { BlogPageWrapper } from \"./blogGrid.style\";\nimport Card from \"../../../components/Card\";\nimport BlogViewToolTip from \"../../../components/blog-view-tooltip\";\nimport SearchBox from \"../../../reusecore/Search\";\nimport Pagination from \"../../Resources/Resources-grid/paginate\";\nimport useDataList from \"../../../utils/usedataList\";\n\nconst BlogGrid = ({\n  isListView,\n  setListView,\n  setGridView,\n  pageContext,\n  data,\n}) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const { queryResults, searchData } = useDataList(\n    data.allMdx.nodes,\n    setSearchQuery,\n    searchQuery,\n    [\"frontmatter\", \"title\"],\n    \"id\"\n  );\n  const searchedPosts = queryResults.slice(indexOfFirstPost, indexOfLastPost);\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo({\n      top: 150,\n      left: 100,\n      behavior: \"smooth\",\n    });\n  };\n  return (\n    <BlogPageWrapper>\n      <PageHeader\n        title=\"Blog\"\n        path=\"Blog\"\n        img={RssFeedIcon}\n        feedlink=\"/blog/feed.xml\"\n      />\n      <div className=\"blog-page-wrapper\">\n        <Container>\n          <Row>\n            <Col xs={12} lg={8}>\n              <div className=\"tooltip-search\">\n                <BlogViewToolTip\n                  isListView={isListView}\n                  setListView={setListView}\n                  setGridView={setGridView}\n                />\n                <SearchBox searchQuery={searchQuery} searchData={searchData} paginate={paginate} currentPage={currentPage} />\n              </div>\n              <div className=\"blog-grid-wrapper\">\n                <Row>\n                  {queryResults.length < 1 && (\n                    <Col xs={12} sm={6}>\n                      No blog post that matches the title \"{searchQuery}\" found.\n                    </Col>\n                  )}\n\n                  {searchedPosts.length > 0 && searchedPosts.map(({ id, frontmatter, fields }) => (\n                    <Col key={id} xs={12} sm={6}>\n                      <Card frontmatter={frontmatter} fields={fields} />\n                    </Col>\n                  ))}\n                  <Col>\n                    {searchedPosts.length > 0 && (\n                      <Pagination\n                        postsPerPage={postsPerPage}\n                        totalPosts={queryResults.length}\n                        paginate={paginate}\n                        currentPage={currentPage}\n                      />\n                    )}\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col xs={12} lg={4}>\n              <Sidebar pageContext={pageContext} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogGrid;\n","import React, { useState, useEffect } from \"react\";\nimport SEO from \"../../components/seo\";\nimport BlogGrid from \"../../sections/Blog/Blog-grid\";\nimport { graphql } from \"gatsby\";\nimport loadable from \"@loadable/component\";\nconst BlogList = loadable(() => import (\"../../sections/Blog/Blog-list\"));\n\nexport const query = graphql`\n  query allBlogs {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: { collection: { eq: \"blog\" } }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      nodes {\n        id\n        body\n        frontmatter {\n          title\n          date(formatString: \"MMM Do, YYYY\")\n          author\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n            extension\n            publicURL\n          }\n          darkthumbnail {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n            extension\n            publicURL\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nconst Blog = (props) => {\n  const [isListView, setIsListView] = useState(false);\n  const setListView = () => {\n    setIsListView(true);\n  };\n  const setGridView = () => {\n    setIsListView(false);\n  };\n  useEffect(() => {\n    if (props.location.state) {\n      if (props.location.state.isListView) setListView();\n    }\n  }, []);\n  let BlogView = (props) => {\n    if (isListView) return <BlogList {...props} />;\n    return <BlogGrid {...props} />;\n  };\n  return (\n    <>\n      <BlogView\n        isListView={isListView}\n        setListView={setListView}\n        setGridView={setGridView}\n        pageContext={props.pageContext}\n        data={props.data}\n      />\n\n    </>\n  );\n};\nexport default Blog;\nexport const Head = () => {\n  return <SEO title=\"Blog\" description=\"The latest news and announcements about Layer5, our products, and our ecosystem, as well as voices from across our community.\" />;\n};"],"names":["BlogPageWrapper","styled","isListView","setListView","setGridView","pageContext","data","useState","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","searchQuery","setSearchQuery","useDataList","allMdx","nodes","queryResults","searchData","searchedPosts","slice","paginate","pageNumber","window","scrollTo","top","left","behavior","PageHeader","title","path","img","RssFeedIcon","feedlink","className","xs","lg","Search","length","sm","map","id","frontmatter","fields","key","Card","totalPosts","BlogList","loadable","props","setIsListView","useEffect","location","state","BlogView","Head","description"],"sourceRoot":""}