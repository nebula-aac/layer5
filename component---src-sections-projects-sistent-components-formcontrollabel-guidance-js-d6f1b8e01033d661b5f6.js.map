{"version":3,"file":"component---src-sections-projects-sistent-components-formcontrollabel-guidance-js-d6f1b8e01033d661b5f6.js","mappings":"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","sources":["webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js","webpack://Layer5/./src/sections/Projects/Sistent/components/formcontrollabel/guidance.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {\n  FormControlLabel,\n  Checkbox,\n  Radio,\n  Switch,\n  SistentThemeProvider\n} from \"@sistent/sistent\";\n\nimport { SistentLayout } from \"../../sistent-layout\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { Row } from \"../../../../../reusecore/Layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst FormControlLabelGuidance = () => {\n  const { isDark } = useStyledDarkMode();\n  const location = useLocation();\n  const [checked, setChecked] = useState(true);\n\n  return (\n    <SistentLayout title=\"FormControlLabel\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>FormControlLabel</h2>\n        </a>\n        <p>\n          The <code>FormControlLabel</code> component combines a form control (such as a checkbox,\n          radio button, or switch) with a label. It improves accessibility and consistency by\n          ensuring that the form control and its label are semantically and visually connected.\n        </p>\n\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/formcontrollabel\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/formcontrollabel\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n                \"/projects/sistent/components/formcontrollabel/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/formcontrollabel/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/formcontrollabel/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/formcontrollabel/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n\n        <div className=\"main-content\">\n          <a id=\"Usage\">\n            <h2>Usage</h2>\n          </a>\n          <p>\n            Use <code>FormControlLabel</code> when you need to pair a form control with a descriptive label. This improves usability and ensures better alignment and interaction.\n          </p>\n\n          <ul>\n            <li>Supports <code>control</code> prop for checkboxes, radios, switches, etc.</li>\n            <li>Automatically positions the label to the right of the control by default.</li>\n            <li >Can be customized with positioning via <code>labelPlacement</code> prop.</li>\n          </ul>\n\n          <a id=\"Checkbox Usage\">\n            <h3>With Checkbox</h3>\n          </a>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={checked}\n                    onChange={() => setChecked(!checked)}\n                  />\n                }\n                label=\"Accept Terms and Conditions\"\n              />\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Disabled Checkbox\">\n            <h3>With Disabled Checkbox</h3>\n          </a>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <FormControlLabel\n                control={<Checkbox disabled />}\n                label=\"I agree to receive marketing emails\"\n                disabled\n              />\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Radio Usage\">\n            <h3>With Radio Button</h3>\n          </a>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <FormControlLabel control={<Radio />} label=\"Option A\" />\n            </SistentThemeProvider>\n          </Row>\n          <a id=\"Radio Label Start\">\n            <h3>With Radio Button (Label on Left)</h3>\n          </a>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <FormControlLabel\n                control={<Radio />}\n                label=\"Choose Plan\"\n                labelPlacement=\"start\"\n              />\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Switch Usage\">\n            <h3>With Switch</h3>\n          </a>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <FormControlLabel control={<Switch />} label=\"Enable Notifications\" />\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Best Practices\">\n            <h2>Best Practices</h2>\n          </a>\n\n          <h3>Accessibility</h3>\n          <p>\n            Always use a visible and meaningful label. This ensures assistive technologies can\n            identify the purpose of the control.\n          </p>\n\n          <h3>Label Positioning</h3>\n          <p>\n            Use the <code>labelPlacement</code> prop to customize where the label appears\n            (top, bottom, start, end). Default is <code>end</code>.\n          </p>\n\n          <h3>Consistency</h3>\n          <p>\n            Use consistent label styles across forms to build visual trust and maintain\n            usability. Do not use different positions for labels unless absolutely necessary.\n          </p>\n\n          <h3>Clear Language</h3>\n          <p>\n            Keep labels short, clear, and actionable. They should describe exactly what the\n            control does.\n          </p>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default FormControlLabelGuidance;\n"],"names":["JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useState","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","id","link","text","intapath","setIntapath","path","window","location","pathname","React","className","x","key","Link","to","activeClassName","SistentLayout","_ref","title","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage","FormControlLabelGuidance","isDark","useStyledDarkMode","useLocation","checked","setChecked","TabButton","onClick","navigate","Row","$Hcenter","SistentThemeProvider","initialMode","FormControlLabel","control","Checkbox","onChange","label","disabled","Radio","labelPlacement","Switch"],"sourceRoot":""}